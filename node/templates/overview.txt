{% extends "templates/testshell.html" %}
{% block markdown %}	

Intro
-----				

Render math without needing to know any $display(\LaTeX)$. Mathematical expressions like 3^12 or sqrt(3)/3 will be converted to $display(\LaTeX)$ and then displayed using $display(\KaTeX)$ as $3^12$ and $sqrt(3)/3$. The non-math text will be treated as markdown (using markedjs at least for now) so you can use *italics*, **bold**, headers, and more.

Plots
-----

Many functions can be plotted to produce a graph similar to the following:

$$plot(y=x^2-5)$$

For more info, go to the [plots](https://inlinemath.com/plots) section.

Trees
-----

Expressions can be parsed and displayed as a tree of operations. 

$$tree(y=x^2+2*x+5)$$

For more info, go to the [trees](https://inlinemath.com/trees) section.

Code
-----

Code can be displayed with any mathematical expressions automatically displayed as math. 

```
var x = 3^10+4;
```

For more info, go to the [code](https://inlinemath.com/code) section.

Variables
-----

Create variables that can be called later.

$7$![A]
$11$![B]
$A+2*B$

For more info, go to the [variables](https://inlinemath.com/variables) section.

Inputs
-----

Create user inputs that will be rendered automatically.

$range(10,70)$[F]

$input()$[G]

$number(10,70)$[E]

$radio(1+3^2,2,3^2)$[D]

$checkbox(x^2,0)$[C]

For more info, go to the [inputs](https://inlinemath.com/inputs) section.


Solve
-----

Many expressions can be computed before rendering if desired. Easily evaluate user inputs or simply save yourself the trouble of calculating the answer.

$E+F==(E+F)[A]$

Differentiate: $input()$[H]

$ddx(H)==(ddx(H))[A]$

$sin(=(7*pi/6)[A])==(sin(7*pi/6))[A]$

$max(3,4,5,2+7,3)==(max(3,4,5,2+7,3))[A]$

$7 choose 3==(7*2 choose 3)[A]$

$abs(3-7)==(abs(3-7))[A]$

$gcd(36,16)==(gcd(36,16))[A]$



For more info, go to the [solve](https://inlinemath.com/solve) section.


More Features
-------------

Custom functions
display the latex
output from latex

$display(\LaTeX)$

$latex(3^12)$

$display(\frac{3^{12}}{4})$

$latex(3^12/7)$








{% endblock %}